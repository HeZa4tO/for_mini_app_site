document.addEventListener("DOMContentLoaded", () => {
    console.log("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...");

    const cart = JSON.parse(sessionStorage.getItem("cart") || "[]");
    const checkoutCart = document.getElementById("checkoutCart");
    const totalSumDiv = document.getElementById("totalSum");
    
    // –ù–ê–î–ï–ñ–ù–´–ô –ü–û–ò–°–ö –ö–ù–û–ü–ö–ò
    let sendButton = document.getElementById("sendOrder");
    if (!sendButton) {
        console.warn("‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...");
        sendButton = Array.from(document.querySelectorAll('button')).find(btn => 
            btn.textContent.includes('–û—Ç–ø—Ä–∞–≤–∏—Ç—å') || 
            btn.textContent.includes('–û—Ñ–æ—Ä–º–∏—Ç—å') ||
            btn.textContent.includes('–∑–∞–∫–∞–∑')
        );
    }

    console.log("üîç –≠–ª–µ–º–µ–Ω—Ç—ã DOM:", {
        checkoutCart: !!checkoutCart,
        totalSumDiv: !!totalSumDiv,
        sendButton: !!sendButton
    });

    if (!sendButton) {
        console.error("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
        return;
    }

    const RUB_RATE = 13;
    
    // –¶–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    const DELIVERY_PRICES = {
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2000, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "ü•æ –ë–æ—Ç–∏–Ω–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2100, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 7000},
        "üß• –¢–æ–ª—Å—Ç–æ–≤–∫–∏, –∫–æ—Ñ—Ç—ã, –ª—ë–≥–∫–∏–µ –∫—É—Ä—Ç–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üëï –§—É—Ç–±–æ–ª–∫–∏, —à–æ—Ä—Ç—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1300, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4500},
        "üëñ –®—Ç–∞–Ω—ã, –¥–∂–∏–Ω—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üß§ –ó–∏–º–Ω–∏–µ –∫—É—Ä—Ç–∫–∏, –ø–∞–ª—å—Ç–æ": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5500},
        "üß¶ –ù–æ—Å–∫–∏, –º–∞–π–∫–∏, –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üï∂ –û—á–∫–∏, –ø–∞—Ä—Ñ—é–º, —É–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üß¢ –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üëú –°—É–º–∫–∏ (–º–∞–ª–µ–Ω—å–∫–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1400, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üéí –°—É–º–∫–∏ (–±–æ–ª—å—à–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "üì¶ –î—Ä—É–≥–æ–µ": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000}
    };

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
    const BOT_CONFIG = {
        token: '8366570428:AAEeqDHl75ouB3JkbVqg7acdESgDoTKUX9U',
        chatId: '1363888506'
    };

    // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp
    const isTelegramWebApp = () => {
        console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp...");
        
        if (window.Telegram && window.Telegram.WebApp) {
            const webApp = window.Telegram.WebApp;
            console.log("üì± Telegram WebApp –æ–±–Ω–∞—Ä—É–∂–µ–Ω:", {
                initData: !!webApp.initData,
                initDataUnsafe: !!webApp.initDataUnsafe,
                platform: webApp.platform,
                version: webApp.version
            });
            
            if (webApp.initData || webApp.platform) {
                console.log("‚úÖ Telegram WebApp –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω");
                return true;
            }
        }
        
        const userAgent = navigator.userAgent.toLowerCase();
        const isTelegramUserAgent = userAgent.includes('telegram') || userAgent.includes('webapp');
        
        const urlParams = new URLSearchParams(window.location.search);
        const hasTelegramParams = urlParams.has('tgWebAppData') || urlParams.has('tgWebAppVersion');
        
        console.log("üì± –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:", {
            userAgent: isTelegramUserAgent,
            urlParams: hasTelegramParams
        });
        
        return isTelegramUserAgent || hasTelegramParams;
    };

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    let totalRub = 0;
    let totalItemsPrice = 0;
    let totalDelivery = 0;
    let totalCommission = 0;
    
    checkoutCart.innerHTML = "";

    cart.forEach((item, index) => {
        const priceYuan = Number(item.price || 1);
        const priceRub = Math.ceil(priceYuan * RUB_RATE);
        const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
        const deliveryRub = Math.ceil(deliveryPrice);
        const taxRub = Math.ceil(priceRub * 0.1);
        const itemTotalRub = Math.ceil(priceRub + deliveryRub + taxRub);
        
        totalRub += itemTotalRub;
        totalItemsPrice += priceRub;
        totalDelivery += deliveryRub;
        totalCommission += taxRub;

        const div = document.createElement("div");
        div.className = "checkout-item";
        div.innerHTML = `
            <div class="checkout-item-header">
                <strong>${item.category}</strong>
            </div>
            <div class="checkout-item-details">
                <div>–°—Å—ã–ª–∫–∞: ${item.link || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                <div>–¶–µ–Ω–∞: ¬•${priceYuan} (‚ÇΩ${priceRub})</div>
                <div>–†–∞–∑–º–µ—Ä: ${item.size || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
                <div>–¶–≤–µ—Ç: ${item.color}</div>
                <div>–î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery} (‚ÇΩ${deliveryRub})</div>
                <div class="item-total">–ò—Ç–æ–≥–æ: ‚ÇΩ${itemTotalRub}</div>
            </div>
        `;
        checkoutCart.appendChild(div);
    });

    totalSumDiv.textContent = `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${Math.ceil(totalRub).toLocaleString()}`;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    setTimeout(() => {
        const isTelegram = isTelegramWebApp();
        console.log("üèÅ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ñ–ò–ú:", isTelegram ? "TELEGRAM" : "BROWSER");

        if (isTelegram) {
            console.log("üü¢ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram —Ä–µ–∂–∏–º");
            setupTelegramMode();
        } else {
            console.log("üü° –ó–∞–ø—É—Å–∫–∞–µ–º Browser —Ä–µ–∂–∏–º");
            setupBrowserMode();
        }
    }, 100);

    function setupTelegramMode() {
        console.log("üü¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram —Ä–µ–∂–∏–º–∞");
        
        sendButton.style.display = 'block';
        sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑";
        
        if (window.Telegram && window.Telegram.WebApp) {
            try {
                console.log("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp...");
                Telegram.WebApp.ready();
                Telegram.WebApp.expand();
                
                console.log("‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
                
                try {
                    Telegram.WebApp.MainButton.setText("üì¶ –û–¢–ü–†–ê–í–ò–¢–¨ –ó–ê–ö–ê–ó");
                    Telegram.WebApp.MainButton.show();
                    Telegram.WebApp.MainButton.onClick(handleOrderSubmit);
                    console.log("‚úÖ MainButton –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞");
                } catch (mainButtonError) {
                    console.warn("‚ö†Ô∏è MainButton –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:", mainButtonError);
                }
                
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram:", error);
            }
        }
        
        setupButtonHandler(handleOrderSubmit);
    }

    function setupBrowserMode() {
        console.log("üü° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Browser —Ä–µ–∂–∏–º–∞");
        sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑";
        setupButtonHandler(handleOrderSubmit);
    }

    function setupButtonHandler(handler) {
        console.log("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É...");
        
        sendButton.onclick = null;
        
        const newButton = sendButton.cloneNode(true);
        sendButton.parentNode.replaceChild(newButton, sendButton);
        sendButton = newButton;

        sendButton.onclick = function(e) {
            console.log("üéØ –ö–ù–û–ü–ö–ê –ù–ê–ñ–ê–¢–ê!");
            e.preventDefault();
            e.stopPropagation();
            handler.call(this, e);
        };
        
        sendButton.addEventListener('click', function(e) {
            console.log("üéØ addEventListener: –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!");
            e.preventDefault();
            e.stopPropagation();
            handler.call(this, e);
        }, true);
        
        sendButton.disabled = false;
        sendButton.style.pointerEvents = 'auto';
        sendButton.style.opacity = '1';
        sendButton.style.display = 'block';

        console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∫–Ω–æ–ø–∫—É:", sendButton.textContent);
    }

    async function handleOrderSubmit() {
        console.log("üü° –ù–ê–ß–ê–õ–û –û–¢–ü–†–ê–í–ö–ò –ó–ê–ö–ê–ó–ê");
        
        const formData = getFormData();
        if (!formData.valid) {
            console.log("üî¥ –§–æ—Ä–º–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω–∞");
            return;
        }

        console.log("üü¢ –§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞, –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ...");

        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toLocaleString(),
            source: isTelegramWebApp() ? 'telegram' : 'browser',
            breakdown: {
                items: totalItemsPrice,
                delivery: totalDelivery,
                commission: totalCommission
            }
        };

        const orderMessage = formatOrderMessage(orderData);

        console.log("üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", orderMessage);

        try {
            console.log("üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏...");
            sendButton.disabled = true;
            sendButton.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";

            await sendOrderToTelegram(orderMessage);
            
            console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
            showSuccess("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.");
            
            sessionStorage.removeItem("cart");
            
            if (isTelegramWebApp() && window.Telegram?.WebApp?.close) {
                setTimeout(() => {
                    console.log("üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...");
                    Telegram.WebApp.close();
                }, 2000);
            } else {
                setTimeout(() => {
                    sendButton.disabled = false;
                    sendButton.textContent = "üîÑ –°–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑";
                    sendButton.onclick = () => location.reload();
                }, 3000);
            }

        } catch (error) {
            console.error("‚ùå –û–®–ò–ë–ö–ê –û–¢–ü–†–ê–í–ö–ò:", error);
            
            showError("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.");
            
            sendButton.disabled = false;
            sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑";
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    function formatOrderMessage(orderData) {
        const user = orderData.user;
        const items = orderData.items;
        
        let message = `üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –ò–ó ${orderData.source === 'telegram' ? 'TELEGRAM' : '–ë–†–ê–£–ó–ï–†–ê'}\n\n`;
        message += `üë§ –ö–ª–∏–µ–Ω—Ç: ${user.fullname}\n`;
        message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}\n`;
        message += `üè† –ê–¥—Ä–µ—Å: ${user.address}\n\n`; // –£–±—Ä–∞–ª city, –æ—Å—Ç–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ address
        
        message += `üì¶ –¢–æ–≤–∞—Ä—ã:\n`;
        
        items.forEach((item, index) => {
            const priceYuan = Number(item.price || 1);
            const priceRub = Math.ceil(priceYuan * 13);
            
            message += `${index + 1}. ${item.category}\n`;
            message += `   üí∞ –¶–µ–Ω–∞: ¬•${priceYuan} (‚ÇΩ${priceRub})\n`; // –î–æ–±–∞–≤–∏–ª —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö
            message += `   üìè –†–∞–∑–º–µ—Ä: ${item.size}\n`;
            message += `   üé® –¶–≤–µ—Ç –∫–Ω–æ–ø–∫–∏: ${item.color}\n`;
            message += `   üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery}\n`;
            message += `   üîó –°—Å—ã–ª–∫–∞: ${item.link}\n\n`;
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–±–∏–≤–∫—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        message += `üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞:\n`;
        message += `   –¢–æ–≤–∞—Ä—ã: ‚ÇΩ${orderData.breakdown.items.toLocaleString()}\n`;
        message += `   –î–æ—Å—Ç–∞–≤–∫–∞: ‚ÇΩ${orderData.breakdown.delivery.toLocaleString()}\n`;
        message += `   –ö–æ–º–∏—Å—Å–∏—è: ‚ÇΩ${orderData.breakdown.commission.toLocaleString()}\n`;
        message += `   –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${orderData.total.toLocaleString()}\n\n`;
        
        message += `‚è∞ –í—Ä–µ–º—è: ${orderData.timestamp}\n`;
        message += `üåê –ò—Å—Ç–æ—á–Ω–∏–∫: ${orderData.source === 'telegram' ? 'Telegram' : '–ë—Ä–∞—É–∑–µ—Ä'}`;
        
        return message;
    }

    async function sendOrderToTelegram(message) {
        const { token, chatId } = BOT_CONFIG;
        
        if (!token || !chatId) {
            throw new Error("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ chat ID");
        }
        
        const url = `https://api.telegram.org/bot${token}/sendMessage`;
        
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'Markdown'
            })
        });
        
        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', errorText);
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }
        
        return await response.json();
    }

    function getFormData() {
        console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã...");
        
        const fullname = document.getElementById("fullname")?.value.trim() || "";
        const phone = document.getElementById("phone")?.value.trim() || "";
        const city = document.getElementById("city")?.value.trim() || "";
        const address = document.getElementById("address")?.value.trim() || "";

        console.log("üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:", { fullname, phone, city, address });

        if (!fullname || !phone || !city || !address) {
            showError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã!");
            return { valid: false };
        }

        if (cart.length === 0) {
            showError("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.");
            return { valid: false };
        }

        console.log("üü¢ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã");
        return {
            valid: true,
            user: { fullname, phone, city, address }
        };
    }

    function showError(message) {
        console.error("‚ùå –û—à–∏–±–∫–∞:", message);
        const errorDiv = document.createElement("div");
        errorDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%) translateY(-20px);
            background: linear-gradient(135deg, #ff6b6b, #ee5a52);
            color: white;
            padding: 15px 25px;
            border-radius: 12px;
            z-index: 1000;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
            opacity: 0;
            transition: all 0.3s ease;
            border-left: 4px solid #ff4757;
        `;
        errorDiv.textContent = message;
        document.body.appendChild(errorDiv);
        
        setTimeout(() => {
            errorDiv.style.opacity = '1';
            errorDiv.style.transform = 'translateX(-50%) translateY(0)';
        }, 10);
        
        setTimeout(() => {
            errorDiv.style.opacity = '0';
            errorDiv.style.transform = 'translateX(-50%) translateY(-20px)';
            setTimeout(() => {
                if (errorDiv.parentNode) {
                    errorDiv.parentNode.removeChild(errorDiv);
                }
            }, 300);
        }, 5000);
    }

    function showSuccess(message) {
        console.log("‚úÖ –£—Å–ø–µ—Ö:", message);
        const successDiv = document.createElement("div");
        successDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%) translateY(-20px);
            background: linear-gradient(135deg, #1e1e1e, #2d2d2d);
            color: white;
            padding: 15px 25px;
            border-radius: 12px;
            z-index: 1000;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
            opacity: 0;
            transition: all 0.3s ease;
            border-left: 4px solid #1e1e1e;
        `;
        successDiv.textContent = message;
        document.body.appendChild(successDiv);
        
        setTimeout(() => {
            successDiv.style.opacity = '1';
            successDiv.style.transform = 'translateX(-50%) translateY(0)';
        }, 10);
        
        setTimeout(() => {
            successDiv.style.opacity = '0';
            successDiv.style.transform = 'translateX(-50%) translateY(-20px)';
            setTimeout(() => {
                if (successDiv.parentNode) {
                    successDiv.parentNode.removeChild(successDiv);
                }
            }, 300);
        }, 3000);
    }
});