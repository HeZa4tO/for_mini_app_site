document.addEventListener("DOMContentLoaded", () => {
    // ==================== –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ====================
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–æ–≥–æ–≤
    const logContainer = document.createElement('div');
    logContainer.style.cssText = `
        position: fixed;
        top: 10px;
        right: 10px;
        width: 350px;
        height: 250px;
        background: rgba(0,0,0,0.9);
        color: #00ff00;
        font-family: 'Courier New', monospace;
        font-size: 11px;
        padding: 10px;
        overflow-y: auto;
        z-index: 9999;
        border: 2px solid #1e1e1e;
        border-radius: 8px;
        display: none;
        line-height: 1.3;
    `;
    logContainer.id = 'debug-log-container';
    document.body.appendChild(logContainer);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω
    function showLog(message) {
        const originalConsoleLog = console.log;
        originalConsoleLog(message);
        
        const logEntry = document.createElement('div');
        logEntry.style.cssText = `
            margin-bottom: 4px;
            border-bottom: 1px solid #1e1e1e;
            padding-bottom: 4px;
        `;
        logEntry.textContent = `[${new Date().toLocaleTimeString()}] ${message}`;
        logContainer.appendChild(logEntry);
        logContainer.scrollTop = logContainer.scrollHeight;
    }

    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –ª–æ–≥–æ–≤
    const toggleLogsBtn = document.createElement('button');
    toggleLogsBtn.textContent = 'üìã –õ–æ–≥–∏';
    toggleLogsBtn.style.cssText = `
        position: fixed;
        top: 10px;
        right: 10px;
        z-index: 10000;
        padding: 8px 12px;
        background: #1e1e1e;
        color: white;
        border: 2px solid #1e1e1e;
        border-radius: 8px;
        cursor: pointer;
        font-size: 12px;
        font-weight: bold;
    `;
    toggleLogsBtn.onclick = () => {
        const isVisible = logContainer.style.display === 'block';
        logContainer.style.display = isVisible ? 'none' : 'block';
        toggleLogsBtn.textContent = isVisible ? 'üìã –õ–æ–≥–∏' : '‚ùå –ó–∞–∫—Ä—ã—Ç—å';
        toggleLogsBtn.style.background = isVisible ? '#1e1e1e' : '#ff4757';
    };
    document.body.appendChild(toggleLogsBtn);

    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ Telegram
    const statusDiv = document.createElement('div');
    statusDiv.style.cssText = `
        position: fixed;
        top: 10px;
        left: 10px;
        background: #1e1e1e;
        color: white;
        padding: 8px 12px;
        border-radius: 8px;
        font-size: 12px;
        font-weight: bold;
        z-index: 10000;
        border: 2px solid #1e1e1e;
    `;
    statusDiv.id = 'telegram-status';
    document.body.appendChild(statusDiv);

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º console.log –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const originalConsoleLog = console.log;
    console.log = function(...args) {
        originalConsoleLog.apply(console, args);
        showLog(args.map(arg => 
            typeof arg === 'object' ? JSON.stringify(arg) : String(arg)
        ).join(' '));
    };

    // ==================== –û–°–ù–û–í–ù–û–ô –ö–û–î ====================
    const cart = JSON.parse(sessionStorage.getItem("cart") || "[]");
    const checkoutCart = document.getElementById("checkoutCart");
    const totalSumDiv = document.getElementById("totalSum");
    const sendButton = document.getElementById("sendOrder");

    const RUB_RATE = 13;
    
    // –¶–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    const DELIVERY_PRICES = {
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2000, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "ü•æ –ë–æ—Ç–∏–Ω–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2100, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 7000},
        "üß• –¢–æ–ª—Å—Ç–æ–≤–∫–∏, –∫–æ—Ñ—Ç—ã, –ª—ë–≥–∫–∏–µ –∫—É—Ä—Ç–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üëï –§—É—Ç–±–æ–ª–∫–∏, —à–æ—Ä—Ç—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1300, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4500},
        "üëñ –®—Ç–∞–Ω—ã, –¥–∂–∏–Ω—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üß§ –ó–∏–º–Ω–∏–µ –∫—É—Ä—Ç–∫–∏, –ø–∞–ª—å—Ç–æ": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5500},
        "üß¶ –ù–æ—Å–∫–∏, –º–∞–π–∫–∏, –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üï∂ –û—á–∫–∏, –ø–∞—Ä—Ñ—é–º, —É–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üß¢ –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üëú –°—É–º–∫–∏ (–º–∞–ª–µ–Ω—å–∫–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1400, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üéí –°—É–º–∫–∏ (–±–æ–ª—å—à–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "üì¶ –î—Ä—É–≥–æ–µ": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000}
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ Telegram WebApp
    function debugTelegramWebApp() {
        console.log("=== DEBUG TELEGRAM WEBAPP ===");
        console.log("Telegram object:", window.Telegram);
        console.log("WebApp object:", window.Telegram?.WebApp);
        
        if (window.Telegram?.WebApp) {
            const webApp = Telegram.WebApp;
            console.log("initData:", webApp.initData ? "–ï–°–¢–¨" : "–ù–ï–¢");
            console.log("initDataUnsafe:", webApp.initDataUnsafe ? "–ï–°–¢–¨" : "–ù–ï–¢");
            console.log("platform:", webApp.platform);
            console.log("version:", webApp.version);
            console.log("colorScheme:", webApp.colorScheme);
            console.log("themeParams:", webApp.themeParams);
            console.log("isExpanded:", webApp.isExpanded);
            console.log("viewportHeight:", webApp.viewportHeight);
            console.log("MainButton:", webApp.MainButton ? "–î–û–°–¢–£–ü–ï–ù" : "–ù–ï–¢");
        }
        console.log("User Agent:", navigator.userAgent);
        console.log("=== END DEBUG ===");
    }

    // –°–£–ü–ï–†-–ù–ê–î–ï–ñ–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp
    const isTelegramWebApp = () => {
        // –°–ø–æ—Å–æ–± 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ Telegram
        if (window.Telegram && window.Telegram.WebApp) {
            const webApp = window.Telegram.WebApp;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ Telegram WebApp
            if (webApp.initData || webApp.initDataUnsafe || webApp.platform) {
                console.log("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º");
                return true;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é WebApp
            if (webApp.version) {
                console.log("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp –ø–æ –≤–µ—Ä—Å–∏–∏:", webApp.version);
                return true;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
            if (webApp.colorScheme || webApp.themeParams) {
                console.log("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp –ø–æ themeParams");
                return true;
            }
        }
        
        // –°–ø–æ—Å–æ–± 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ User Agent
        const userAgent = navigator.userAgent.toLowerCase();
        if (userAgent.includes('telegram') || userAgent.includes('webapp')) {
            console.log("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp –ø–æ User Agent");
            return true;
        }
        
        // –°–ø–æ—Å–æ–± 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (Telegram Mini Apps —á–∞—Å—Ç–æ –∏–º–µ—é—Ç tgWebAppData)
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('tgWebAppData') || urlParams.has('tgWebAppVersion')) {
            console.log("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp –ø–æ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º");
            return true;
        }
        
        // –°–ø–æ—Å–æ–± 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Telegram-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        if (typeof window.TelegramWebviewProxy !== 'undefined') {
            console.log("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp –ø–æ TelegramWebviewProxy");
            return true;
        }
        
        console.log("‚ùå –†–µ–∂–∏–º: –ë—Ä–∞—É–∑–µ—Ä (Telegram –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω)");
        return false;
    };

    let totalRub = 0;
    checkoutCart.innerHTML = "";

    cart.forEach((item, index) => {
        const priceYuan = Number(item.price || 1);
        const priceRub = Math.ceil(priceYuan * RUB_RATE);
        const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
        const deliveryRub = Math.ceil(deliveryPrice);
        const taxRub = Math.ceil(priceRub * 0.1);
        const itemTotalRub = Math.ceil(priceRub + deliveryRub + taxRub);
        totalRub += itemTotalRub;

        const div = document.createElement("div");
        div.className = "checkout-item";
        div.innerHTML = `
            <div class="checkout-item-header">
                <strong>${item.category}</strong>
            </div>
            <div class="checkout-item-details">
                <div>–°—Å—ã–ª–∫–∞: ${item.link || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                <div>–¶–µ–Ω–∞: ¬•${priceYuan} (‚ÇΩ${priceRub})</div>
                <div>–†–∞–∑–º–µ—Ä: ${item.size || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
                <div>–¶–≤–µ—Ç: ${item.color}</div>
                <div>–î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery} (‚ÇΩ${deliveryRub})</div>
                <div class="item-total">–ò—Ç–æ–≥–æ: ‚ÇΩ${itemTotalRub}</div>
            </div>
        `;
        checkoutCart.appendChild(div);
    });

    totalSumDiv.textContent = `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${Math.ceil(totalRub).toLocaleString()}`;

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp (–∏–Ω–æ–≥–¥–∞ –æ–Ω –≥—Ä—É–∑–∏—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π)
    setTimeout(() => {
        console.log("üîç –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:");
        
        const isTelegram = isTelegramWebApp();
        console.log("üèÅ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ñ–ò–ú:", isTelegram ? "TELEGRAM" : "BROWSER");

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞
        const statusElement = document.getElementById('telegram-status');
        if (isTelegram) {
            statusElement.textContent = '‚úÖ Telegram Mode';
            statusElement.style.background = '#1e1e1e';
            statusElement.style.borderColor = '#1e1e1e';
        } else {
            statusElement.textContent = '‚ùå Browser Mode';
            statusElement.style.background = '#ff4757';
            statusElement.style.borderColor = '#ff4757';
        }

        // –í—ã–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
        debugTelegramWebApp();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        if (isTelegram) {
            setupTelegramMode();
        } else {
            setupBrowserMode();
        }
    }, 100);

    function setupTelegramMode() {
        console.log("üü¢ –†–ï–ñ–ò–ú: Telegram WebApp");
        sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram";
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp
        if (window.Telegram && window.Telegram.WebApp) {
            try {
                Telegram.WebApp.ready();
                Telegram.WebApp.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
                console.log("‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
                Telegram.WebApp.MainButton.setText("üì¶ –û–¢–ü–†–ê–í–ò–¢–¨ –ó–ê–ö–ê–ó");
                Telegram.WebApp.MainButton.show();
                Telegram.WebApp.MainButton.onClick(handleTelegramSubmit);
                
                // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞—à—É –∫–Ω–æ–ø–∫—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º Telegram –∫–Ω–æ–ø–∫—É
                sendButton.style.display = 'none';
                
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram:", error);
                // –ï—Å–ª–∏ Telegram –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—à—É
                sendButton.style.display = 'block';
                sendButton.onclick = handleTelegramSubmit;
            }
        } else {
            console.error("‚ùå Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω");
            sendButton.onclick = handleTelegramSubmit;
        }
    }

    function setupBrowserMode() {
        console.log("üü° –†–ï–ñ–ò–ú: –ë—Ä–∞—É–∑–µ—Ä");
        sendButton.textContent = "üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é";
        
        sendButton.onclick = handleBrowserSubmit;
    }

    async function handleTelegramSubmit() {
        console.log("üü° 1. –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞");
        
        const formData = getFormData();
        if (!formData.valid) {
            console.log("üî¥ 2. –§–æ—Ä–º–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω–∞");
            return;
        }
        
        console.log("üü¢ 3. –§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞, –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ");

        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toISOString(),
            source: 'telegram'
        };

        console.log("üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", orderData);

        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            if (Telegram.WebApp.MainButton && Telegram.WebApp.MainButton.isVisible) {
                Telegram.WebApp.MainButton.showProgress();
            } else {
                sendButton.disabled = true;
                sendButton.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Telegram WebApp –¥–æ—Å—Ç—É–ø–µ–Ω
            if (!window.Telegram?.WebApp) {
                throw new Error("Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω");
            }

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            if (!Telegram.WebApp.initData) {
                console.warn("‚ö†Ô∏è initData –ø—É—Å—Ç–æ–π, –Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å");
            }

            console.log("üîµ 4. –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ Telegram WebApp");
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            Telegram.WebApp.sendData(JSON.stringify(orderData));
            
            console.log("‚úÖ 5. –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram");
            showSuccess("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
            
            // –î–∞–µ–º –≤—Ä–µ–º—è —É–≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            setTimeout(() => {
                if (window.Telegram?.WebApp?.close) {
                    Telegram.WebApp.close();
                }
            }, 1500);

        } catch (error) {
            console.error("‚ùå 6. –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", error);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É
            let errorMessage = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. ";
            if (error.message.includes("initData")) {
                errorMessage += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.";
            } else {
                errorMessage += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            }
            
            showError(errorMessage);
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            if (Telegram.WebApp.MainButton && Telegram.WebApp.MainButton.isVisible) {
                Telegram.WebApp.MainButton.hideProgress();
            } else {
                sendButton.disabled = false;
                sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram";
            }
        }
    }

    function handleBrowserSubmit() {
        const formData = getFormData();
        if (!formData.valid) return;

        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toLocaleString(),
            source: 'browser'
        };

        showBrowserInstruction(orderData);
    }

    function getFormData() {
        const fullname = document.getElementById("fullname")?.value.trim() || "";
        const phone = document.getElementById("phone")?.value.trim() || "";
        const city = document.getElementById("city")?.value.trim() || "";
        const address = document.getElementById("address")?.value.trim() || "";

        if (!fullname || !phone || !city || !address) {
            showError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã!");
            return { valid: false };
        }

        if (cart.length === 0) {
            showError("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.");
            return { valid: false };
        }

        return {
            valid: true,
            user: { fullname, phone, city, address }
        };
    }

    function showBrowserInstruction(orderData) {
        const orderText = formatOrderForManual(orderData);
        
        const instructionHTML = `
            <div class="browser-instruction" style="background: #1e1e1e; border: 2px solid #1e1e1e; border-radius: 10px; padding: 20px; margin: 20px 0; text-align: center;">
                <h3 style="color: #ffffffff; margin-bottom: 15px;">‚ùå –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –≤ Telegram!</h3>
                
                <div class="instruction-steps" style="background: #1e1e1e; padding: 15px; border-radius: 8px; margin: 15px 0; text-align: left;">
                    <p style="margin-bottom: 10px;"><strong>–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:</strong></p>
                    <ol style="margin-left: 20px;">
                        <li style="margin-bottom: 8px;">–û—Ç–∫—Ä–æ–π—Ç–µ Telegram</li>
                        <li style="margin-bottom: 8px;">–ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞: <strong>@av_drops_bot</strong></li>
                        <li style="margin-bottom: 8px;">–ù–∞–∂–º–∏—Ç–µ <strong>"üõí –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"</strong></li>
                        <li style="margin-bottom: 8px;">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑</li>
                    </ol>
                </div>

                <div class="order-summary" style="background: #1e1e1e; padding: 15px; border-radius: 8px; margin: 15px 0; text-align: left;">
                    <strong>–í–∞—à –∑–∞–∫–∞–∑ –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong>
                    <div class="order-text" style="font-family: monospace; font-size: 12px; background: #1e1e1e; padding: 10px; border-radius: 5px; margin: 10px 0; cursor: pointer; border: 1px solid #1e1e1e; white-space: pre-wrap;"
                         onclick="copyOrderText(this)">
                        ${orderText}
                    </div>
                    <small style="color: #ffffffff;">üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</small>
                </div>

                <div class="contact-info" style="margin-top: 15px;">
                    <p style="margin-bottom: 10px;">–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É:</p>
                    <a href="https://t.me/av_manage" target="_blank" class="manager-link" 
                       style="display: inline-block; background: #1e1e1e; color: white; padding: 10px 15px; border-radius: 5px; text-decoration: none;">
                        üì© –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É
                    </a>
                </div>

                <button onclick="location.reload()" style="margin-top: 15px; padding: 10px 20px; background: #1e1e1e; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    üîÑ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑
                </button>
            </div>
        `;

        // –ó–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        const mainContent = document.querySelector("main") || document.querySelector(".container") || document.body;
        mainContent.innerHTML = instructionHTML;
    }

    function formatOrderForManual(orderData) {
        const user = orderData.user;
        const items = orderData.items;
        
        let message = `üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –ò–ó –ë–†–ê–£–ó–ï–†–ê\n\n`;
        message += `üë§ –ö–ª–∏–µ–Ω—Ç: ${user.fullname}\n`;
        message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}\n`;
        message += `üè† –ê–¥—Ä–µ—Å: ${user.city}, ${user.address}\n\n`;
        
        message += `üì¶ –¢–û–í–ê–†–´:\n`;
        
        const RUB_RATE = 13;
        
        items.forEach((item, index) => {
            const priceYuan = Number(item.price || 1);
            const priceRub = Math.ceil(priceYuan * RUB_RATE);
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            const deliveryRub = Math.ceil(deliveryPrice);
            const taxRub = Math.ceil(priceRub * 0.1);
            
            message += `${index + 1}. ${item.category}\n`;
            message += `   üí∞ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: ¬•${item.price}\n`;
            message += `   üöö –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ¬•${Math.ceil(deliveryPrice / RUB_RATE)}\n`;
            message += `   üí∞ –ö–æ–º–∏—Å—Å–∏—è: ¬•${Math.ceil(taxRub / RUB_RATE)}\n`;
            message += `   üìè –†–∞–∑–º–µ—Ä: ${item.size}\n`;
            message += `   üé® –¶–≤–µ—Ç: ${item.color}\n`;
            message += `   üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery}\n`;
            message += `   üîó –°—Å—ã–ª–∫–∞: ${item.link}\n\n`;
        });
        
        message += `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${orderData.total.toLocaleString()}\n`;
        message += `‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}\n`;
        message += `üåê –ò—Å—Ç–æ—á–Ω–∏–∫: –ë—Ä–∞—É–∑–µ—Ä`;
        
        return message;
    }

    function showError(message) {
        console.error("‚ùå –û—à–∏–±–∫–∞:", message);
        const errorDiv = document.createElement("div");
        errorDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #ff4757;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
            animation: slideDown 0.3s ease;
        `;
        errorDiv.textContent = message;
        document.body.appendChild(errorDiv);
        setTimeout(() => {
            if (errorDiv.parentNode) {
                errorDiv.parentNode.removeChild(errorDiv);
            }
        }, 5000);
    }

    function showSuccess(message) {
        console.log("‚úÖ –£—Å–ø–µ—Ö:", message);
        const successDiv = document.createElement("div");
        successDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #1e1e1e;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
            animation: slideDown 0.3s ease;
        `;
        successDiv.textContent = message;
        document.body.appendChild(successDiv);
        setTimeout(() => {
            if (successDiv.parentNode) {
                successDiv.parentNode.removeChild(successDiv);
            }
        }, 5000);
    }

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    window.copyOrderText = function(element) {
        const text = element.textContent;
        navigator.clipboard.writeText(text).then(() => {
            showSuccess("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
        }).catch(() => {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement("textarea");
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand("copy");
            document.body.removeChild(textArea);
            showSuccess("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
        });
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideDown {
            from { transform: translateX(-50%) translateY(-100%); opacity: 0; }
            to { transform: translateX(-50%) translateY(0); opacity: 1; }
        }
        button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        .order-text:hover {
            background: #1e1e1e !important;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ª–æ–≥–æ–≤ */
        #debug-log-container::-webkit-scrollbar {
            width: 6px;
        }
        #debug-log-container::-webkit-scrollbar-track {
            background: #1a1a1a;
        }
        #debug-log-container::-webkit-scrollbar-thumb {
            background: #1e1e1e;
            border-radius: 3px;
        }
    `;
    document.head.appendChild(style);

    // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    console.log("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!");
    console.log("üí° –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üìã –õ–æ–≥–∏' –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤");
});