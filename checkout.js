document.addEventListener("DOMContentLoaded", () => {
    console.log("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...");

    const cart = JSON.parse(sessionStorage.getItem("cart") || "[]");
    const checkoutCart = document.getElementById("checkoutCart");
    const totalSumDiv = document.getElementById("totalSum");
    
    // –ù–ê–î–ï–ñ–ù–´–ô –ü–û–ò–°–ö –ö–ù–û–ü–ö–ò
    let sendButton = document.getElementById("sendOrder");
    if (!sendButton) {
        console.warn("‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...");
        sendButton = Array.from(document.querySelectorAll('button')).find(btn => 
            btn.textContent.includes('–û—Ç–ø—Ä–∞–≤–∏—Ç—å') || 
            btn.textContent.includes('–û—Ñ–æ—Ä–º–∏—Ç—å') ||
            btn.textContent.includes('–∑–∞–∫–∞–∑')
        );
    }

    console.log("üîç –≠–ª–µ–º–µ–Ω—Ç—ã DOM:", {
        checkoutCart: !!checkoutCart,
        totalSumDiv: !!totalSumDiv,
        sendButton: !!sendButton
    });

    if (!sendButton) {
        console.error("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
        return;
    }

    const RUB_RATE = 13;
    
    // –¶–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    const DELIVERY_PRICES = {
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2000, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "ü•æ –ë–æ—Ç–∏–Ω–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2100, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 7000},
        "üß• –¢–æ–ª—Å—Ç–æ–≤–∫–∏, –∫–æ—Ñ—Ç—ã, –ª—ë–≥–∫–∏–µ –∫—É—Ä—Ç–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üëï –§—É—Ç–±–æ–ª–∫–∏, —à–æ—Ä—Ç—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1300, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4500},
        "üëñ –®—Ç–∞–Ω—ã, –¥–∂–∏–Ω—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üß§ –ó–∏–º–Ω–∏–µ –∫—É—Ä—Ç–∫–∏, –ø–∞–ª—å—Ç–æ": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5500},
        "üß¶ –ù–æ—Å–∫–∏, –º–∞–π–∫–∏, –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üï∂ –û—á–∫–∏, –ø–∞—Ä—Ñ—é–º, —É–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üß¢ –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üëú –°—É–º–∫–∏ (–º–∞–ª–µ–Ω—å–∫–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1400, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üéí –°—É–º–∫–∏ (–±–æ–ª—å—à–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "üì¶ –î—Ä—É–≥–æ–µ": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000}
    };

    // –ù–ê–î–ï–ñ–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp
    const isTelegramWebApp = () => {
        if (window.Telegram && window.Telegram.WebApp) {
            const webApp = window.Telegram.WebApp;
            return !!(webApp.initData || webApp.initDataUnsafe || webApp.platform || webApp.version);
        }
        return false;
    };

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    let totalRub = 0;
    checkoutCart.innerHTML = "";

    cart.forEach((item, index) => {
        const priceYuan = Number(item.price || 1);
        const priceRub = Math.ceil(priceYuan * RUB_RATE);
        const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
        const deliveryRub = Math.ceil(deliveryPrice);
        const taxRub = Math.ceil(priceRub * 0.1);
        const itemTotalRub = Math.ceil(priceRub + deliveryRub + taxRub);
        totalRub += itemTotalRub;

        const div = document.createElement("div");
        div.className = "checkout-item";
        div.innerHTML = `
            <div class="checkout-item-header">
                <strong>${item.category}</strong>
            </div>
            <div class="checkout-item-details">
                <div>–°—Å—ã–ª–∫–∞: ${item.link || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                <div>–¶–µ–Ω–∞: ¬•${priceYuan} (‚ÇΩ${priceRub})</div>
                <div>–†–∞–∑–º–µ—Ä: ${item.size || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
                <div>–¶–≤–µ—Ç: ${item.color}</div>
                <div>–î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery} (‚ÇΩ${deliveryRub})</div>
                <div class="item-total">–ò—Ç–æ–≥–æ: ‚ÇΩ${itemTotalRub}</div>
            </div>
        `;
        checkoutCart.appendChild(div);
    });

    totalSumDiv.textContent = `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${Math.ceil(totalRub).toLocaleString()}`;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    setTimeout(() => {
        const isTelegram = isTelegramWebApp();
        console.log("üèÅ –†–µ–∂–∏–º:", isTelegram ? "TELEGRAM" : "BROWSER");

        if (isTelegram) {
            setupTelegramMode();
        } else {
            setupBrowserMode();
        }

        // –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê
        console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", !!sendButton.onclick);
    }, 100);

    function setupTelegramMode() {
        console.log("üü¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram —Ä–µ–∂–∏–º–∞");
        sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram";
        
        if (window.Telegram && window.Telegram.WebApp) {
            try {
                Telegram.WebApp.ready();
                Telegram.WebApp.expand();
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º MainButton Telegram
                Telegram.WebApp.MainButton.setText("üì¶ –û–¢–ü–†–ê–í–ò–¢–¨ –ó–ê–ö–ê–ó");
                Telegram.WebApp.MainButton.show();
                Telegram.WebApp.MainButton.onClick(handleTelegramSubmit);
                
                sendButton.style.display = 'none';
                
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ Telegram, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É:", error);
                sendButton.style.display = 'block';
                setupButtonHandler(handleTelegramSubmit);
            }
        } else {
            setupButtonHandler(handleTelegramSubmit);
        }
    }

    function setupBrowserMode() {
        console.log("üü° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Browser —Ä–µ–∂–∏–º–∞");
        sendButton.textContent = "üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é";
        setupButtonHandler(handleBrowserSubmit);
    }

    // –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ù–ê–°–¢–†–û–ô–ö–ò –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê
    function setupButtonHandler(handler) {
        // –û—á–∏—â–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        sendButton.onclick = null;
        sendButton.replaceWith(sendButton.cloneNode(true));
        
        // –ü–µ—Ä–µ–ø–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        sendButton = document.getElementById("sendOrder") || 
                    Array.from(document.querySelectorAll('button')).find(btn => 
                        btn.textContent.includes('–û—Ç–ø—Ä–∞–≤–∏—Ç—å') || 
                        btn.textContent.includes('–û—Ñ–æ—Ä–º–∏—Ç—å') ||
                        btn.textContent.includes('–∑–∞–∫–∞–∑')
                    );

        if (!sendButton) {
            console.error("‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è");
            return;
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        sendButton.onclick = handler;
        sendButton.addEventListener('click', handler, true);
        
        // –°–Ω–∏–º–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        sendButton.disabled = false;
        sendButton.style.pointerEvents = 'auto';
        sendButton.style.opacity = '1';

        console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∫–Ω–æ–ø–∫—É:", sendButton.textContent);
    }

    async function handleTelegramSubmit() {
        console.log("üü° –ù–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ Telegram");
        
        const formData = getFormData();
        if (!formData.valid) return;

        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toISOString(),
            source: 'telegram'
        };

        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            if (Telegram.WebApp.MainButton && Telegram.WebApp.MainButton.isVisible) {
                Telegram.WebApp.MainButton.showProgress();
            } else {
                sendButton.disabled = true;
                sendButton.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";
            }

            if (!window.Telegram?.WebApp) {
                throw new Error("Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω");
            }

            Telegram.WebApp.sendData(JSON.stringify(orderData));
            
            showSuccess("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
            
            setTimeout(() => {
                if (window.Telegram?.WebApp?.close) {
                    Telegram.WebApp.close();
                }
            }, 1500);

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
            
            let errorMessage = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
            showError(errorMessage);
            
            if (Telegram.WebApp.MainButton && Telegram.WebApp.MainButton.isVisible) {
                Telegram.WebApp.MainButton.hideProgress();
            } else {
                sendButton.disabled = false;
                sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram";
            }
        }
    }

    function handleBrowserSubmit() {
        console.log("üü° –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—Ä–∞—É–∑–µ—Ä–∞ –≤—ã–∑–≤–∞–Ω");
        const formData = getFormData();
        if (!formData.valid) return;

        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toLocaleString(),
            source: 'browser'
        };

        showBrowserInstruction(orderData);
    }

    function getFormData() {
        const fullname = document.getElementById("fullname")?.value.trim() || "";
        const phone = document.getElementById("phone")?.value.trim() || "";
        const city = document.getElementById("city")?.value.trim() || "";
        const address = document.getElementById("address")?.value.trim() || "";

        if (!fullname || !phone || !city || !address) {
            showError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã!");
            return { valid: false };
        }

        if (cart.length === 0) {
            showError("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.");
            return { valid: false };
        }

        return {
            valid: true,
            user: { fullname, phone, city, address }
        };
    }

    function showBrowserInstruction(orderData) {
        const orderText = formatOrderForManual(orderData);
        
        const instructionHTML = `
            <div class="browser-instruction">
                <h3>‚ùå –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –≤ Telegram!</h3>
                
                <div class="instruction-steps">
                    <p><strong>–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:</strong></p>
                    <ol>
                        <li>–û—Ç–∫—Ä–æ–π—Ç–µ Telegram</li>
                        <li>–ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞: <strong>@av_drops_bot</strong></li>
                        <li>–ù–∞–∂–º–∏—Ç–µ <strong>"üõí –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"</strong></li>
                        <li>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑</li>
                    </ol>
                </div>

                <div class="order-summary">
                    <strong>–í–∞—à –∑–∞–∫–∞–∑ –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong>
                    <div class="order-text" onclick="copyOrderText(this)">
                        ${orderText}
                    </div>
                    <small>üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</small>
                </div>

                <div class="contact-info">
                    <p>–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É:</p>
                    <a href="https://t.me/av_manage" target="_blank" class="manager-link">
                        üì© –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É
                    </a>
                </div>

                <button onclick="location.reload()">
                    üîÑ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑
                </button>
            </div>
        `;

        const mainContent = document.querySelector("main") || document.querySelector(".container") || document.body;
        mainContent.innerHTML = instructionHTML;
    }

    function formatOrderForManual(orderData) {
        const user = orderData.user;
        const items = orderData.items;
        
        let message = `üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –ò–ó –ë–†–ê–£–ó–ï–†–ê\n\n`;
        message += `üë§ –ö–ª–∏–µ–Ω—Ç: ${user.fullname}\n`;
        message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}\n`;
        message += `üè† –ê–¥—Ä–µ—Å: ${user.city}, ${user.address}\n\n`;
        
        message += `üì¶ –¢–û–í–ê–†–´:\n`;
        
        const RUB_RATE = 13;
        
        items.forEach((item, index) => {
            const priceYuan = Number(item.price || 1);
            const priceRub = Math.ceil(priceYuan * RUB_RATE);
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            const deliveryRub = Math.ceil(deliveryPrice);
            const taxRub = Math.ceil(priceRub * 0.1);
            
            message += `${index + 1}. ${item.category}\n`;
            message += `   üí∞ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: ¬•${item.price}\n`;
            message += `   üöö –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ¬•${Math.ceil(deliveryPrice / RUB_RATE)}\n`;
            message += `   üí∞ –ö–æ–º–∏—Å—Å–∏—è: ¬•${Math.ceil(taxRub / RUB_RATE)}\n`;
            message += `   üìè –†–∞–∑–º–µ—Ä: ${item.size}\n`;
            message += `   üé® –¶–≤–µ—Ç: ${item.color}\n`;
            message += `   üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery}\n`;
            message += `   üîó –°—Å—ã–ª–∫–∞: ${item.link}\n\n`;
        });
        
        message += `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${orderData.total.toLocaleString()}\n`;
        message += `‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}\n`;
        message += `üåê –ò—Å—Ç–æ—á–Ω–∏–∫: –ë—Ä–∞—É–∑–µ—Ä`;
        
        return message;
    }

    function showError(message) {
        const errorDiv = document.createElement("div");
        errorDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #ff4757;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
        `;
        errorDiv.textContent = message;
        document.body.appendChild(errorDiv);
        setTimeout(() => errorDiv.remove(), 5000);
    }

    function showSuccess(message) {
        const successDiv = document.createElement("div");
        successDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #1e1e1e;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
        `;
        successDiv.textContent = message;
        document.body.appendChild(successDiv);
        setTimeout(() => successDiv.remove(), 5000);
    }

    window.copyOrderText = function(element) {
        const text = element.textContent;
        navigator.clipboard.writeText(text).then(() => {
            showSuccess("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
        }).catch(() => {
            const textArea = document.createElement("textarea");
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand("copy");
            document.body.removeChild(textArea);
            showSuccess("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
        });
    };
});