document.addEventListener("DOMContentLoaded", () => {
    const cart = JSON.parse(sessionStorage.getItem("cart") || "[]");
    const checkoutCart = document.getElementById("checkoutCart");
    const totalSumDiv = document.getElementById("totalSum");
    const sendButton = document.getElementById("sendOrder");

    const RUB_RATE = 13;
    
    // –¶–µ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    const DELIVERY_PRICES = {
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2000, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "ü•æ –ë–æ—Ç–∏–Ω–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 2100, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 7000},
        "üß• –¢–æ–ª—Å—Ç–æ–≤–∫–∏, –∫–æ—Ñ—Ç—ã, –ª—ë–≥–∫–∏–µ –∫—É—Ä—Ç–∫–∏": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üëï –§—É—Ç–±–æ–ª–∫–∏, —à–æ—Ä—Ç—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1300, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4500},
        "üëñ –®—Ç–∞–Ω—ã, –¥–∂–∏–Ω—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üß§ –ó–∏–º–Ω–∏–µ –∫—É—Ä—Ç–∫–∏, –ø–∞–ª—å—Ç–æ": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5500},
        "üß¶ –ù–æ—Å–∫–∏, –º–∞–π–∫–∏, –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üï∂ –û—á–∫–∏, –ø–∞—Ä—Ñ—é–º, —É–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üß¢ –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã": {"–û–±—ã—á–Ω–∞—è üöö": 700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 4000},
        "üëú –°—É–º–∫–∏ (–º–∞–ª–µ–Ω—å–∫–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1400, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000},
        "üéí –°—É–º–∫–∏ (–±–æ–ª—å—à–∏–µ)": {"–û–±—ã—á–Ω–∞—è üöö": 1700, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 6500},
        "üì¶ –î—Ä—É–≥–æ–µ": {"–û–±—ã—á–Ω–∞—è üöö": 1500, "–≠–∫—Å–ø—Ä–µ—Å—Å üöÄ": 5000}
    };

    // –ù–ê–î–ï–ñ–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ Telegram WebApp
    const isTelegramWebApp = () => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ Telegram WebApp
        if (typeof window.Telegram === 'undefined') return false;
        if (!window.Telegram.WebApp) return false;
        
        // Telegram WebApp –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç platform –∏ version
        const webApp = window.Telegram.WebApp;
        return !!(webApp.platform && webApp.version);
    };

    let totalRub = 0;
    checkoutCart.innerHTML = "";

    cart.forEach((item, index) => {
        const priceYuan = Number(item.price || 1);
        const priceRub = Math.ceil(priceYuan * RUB_RATE);
        const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
        const deliveryRub = Math.ceil(deliveryPrice);
        const taxRub = Math.ceil(priceRub * 0.1);
        const itemTotalRub = Math.ceil(priceRub + deliveryRub + taxRub);
        totalRub += itemTotalRub;

        const div = document.createElement("div");
        div.className = "checkout-item";
        div.innerHTML = `
            <div class="checkout-item-header">
                <strong>${item.category}</strong>
            </div>
            <div class="checkout-item-details">
                <div>–°—Å—ã–ª–∫–∞: ${item.link || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                <div>–¶–µ–Ω–∞: ¬•${priceYuan} (‚ÇΩ${priceRub})</div>
                <div>–†–∞–∑–º–µ—Ä: ${item.size || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
                <div>–¶–≤–µ—Ç: ${item.color}</div>
                <div>–î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery} (‚ÇΩ${deliveryRub})</div>
                <div class="item-total">–ò—Ç–æ–≥–æ: ‚ÇΩ${itemTotalRub}</div>
            </div>
        `;
        checkoutCart.appendChild(div);
    });

    totalSumDiv.textContent = `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${Math.ceil(totalRub).toLocaleString()}`;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:");
    console.log("Telegram:", !!window.Telegram);
    console.log("Telegram.WebApp:", !!window.Telegram?.WebApp);
    console.log("Telegram.WebApp.platform:", window.Telegram?.WebApp?.platform);
    console.log("Telegram.WebApp.version:", window.Telegram?.WebApp?.version);
    console.log("–†–µ–∂–∏–º:", isTelegramWebApp() ? "TELEGRAM" : "BROWSER");

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (isTelegramWebApp()) {
        setupTelegramMode();
    } else {
        setupBrowserMode();
    }

    function setupTelegramMode() {
        console.log("üü¢ –†–µ–∂–∏–º: Telegram WebApp");
        sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram";
        
        sendButton.onclick = handleTelegramSubmit;
    }

    function setupBrowserMode() {
        console.log("üü° –†–µ–∂–∏–º: –ë—Ä–∞—É–∑–µ—Ä");
        sendButton.textContent = "üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é";
        
        sendButton.onclick = handleBrowserSubmit;
    }

    async function handleTelegramSubmit() {
        const formData = getFormData();
        if (!formData.valid) return;

        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toISOString(),
            source: 'telegram'
        };

        console.log("üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Telegram:", orderData);

        try {
            sendButton.disabled = true;
            sendButton.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";

            Telegram.WebApp.sendData(JSON.stringify(orderData));
            showSuccess("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
            
            setTimeout(() => {
                Telegram.WebApp.close();
            }, 2000);

        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ Telegram:", error);
            showError("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
            sendButton.disabled = false;
            sendButton.textContent = "üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ Telegram";
        }
    }

    function handleBrowserSubmit() {
        const formData = getFormData();
        if (!formData.valid) return;

        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        const itemsWithDelivery = cart.map(item => {
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            return {
                ...item,
                delivery_rub: deliveryPrice
            };
        });

        const orderData = {
            items: itemsWithDelivery,
            total: totalRub,
            user: formData.user,
            timestamp: new Date().toISOString(),
            source: 'browser'
        };

        showBrowserInstruction(orderData);
    }

    function getFormData() {
        const fullname = document.getElementById("fullname")?.value.trim() || "";
        const phone = document.getElementById("phone")?.value.trim() || "";
        const city = document.getElementById("city")?.value.trim() || "";
        const address = document.getElementById("address")?.value.trim() || "";

        if (!fullname || !phone || !city || !address) {
            showError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã!");
            return { valid: false };
        }

        if (cart.length === 0) {
            showError("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.");
            return { valid: false };
        }

        return {
            valid: true,
            user: { fullname, phone, city, address }
        };
    }

    function showBrowserInstruction(orderData) {
        const orderText = formatOrderForManual(orderData);
        
        const instructionHTML = `
            <div class="browser-instruction" style="background: #1e1e1e; border: 2px solid #1e1e1e; border-radius: 10px; padding: 20px; margin: 20px 0; text-align: center;">
                <h3 style="color: #ffffffff; margin-bottom: 15px;">‚ùå –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –≤ Telegram!</h3>
                
                <div class="instruction-steps" style="background: #1e1e1e; padding: 15px; border-radius: 8px; margin: 15px 0; text-align: left;">
                    <p style="margin-bottom: 10px;"><strong>–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:</strong></p>
                    <ol style="margin-left: 20px;">
                        <li style="margin-bottom: 8px;">–û—Ç–∫—Ä–æ–π—Ç–µ Telegram</li>
                        <li style="margin-bottom: 8px;">–ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞: <strong>@av_drops_bot</strong></li>
                        <li style="margin-bottom: 8px;">–ù–∞–∂–º–∏—Ç–µ <strong>"üõí –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"</strong></li>
                        <li style="margin-bottom: 8px;">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑</li>
                    </ol>
                </div>

                <div class="order-summary" style="background: #1e1e1e; padding: 15px; border-radius: 8px; margin: 15px 0; text-align: left;">
                    <strong>–í–∞—à –∑–∞–∫–∞–∑ –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong>
                    <div class="order-text" style="font-family: monospace; font-size: 12px; background: #1e1e1e; padding: 10px; border-radius: 5px; margin: 10px 0; cursor: pointer; border: 1px solid #1e1e1e; white-space: pre-wrap;"
                         onclick="copyOrderText(this)">
                        ${orderText}
                    </div>
                    <small style="color: #ffffffff;">üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</small>
                </div>

                <div class="contact-info" style="margin-top: 15px;">
                    <p style="margin-bottom: 10px;">–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É:</p>
                    <a href="https://t.me/av_manage" target="_blank" class="manager-link" 
                       style="display: inline-block; background: #1e1e1e; color: white; padding: 10px 15px; border-radius: 5px; text-decoration: none;">
                        üì© –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É
                    </a>
                </div>

                <button onclick="location.reload()" style="margin-top: 15px; padding: 10px 20px; background: #1e1e1e; color: white; border: none; border-radius: 5px; cursor: pointer;">
                    üîÑ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑
                </button>
            </div>
        `;

        // –ó–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        const mainContent = document.querySelector("main") || document.querySelector(".container") || document.body;
        mainContent.innerHTML = instructionHTML;
    }

    function formatOrderForManual(orderData) {
        const user = orderData.user;
        const items = orderData.items;
        
        let message = `üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –ò–ó –ë–†–ê–£–ó–ï–†–ê\n\n`;
        message += `üë§ –ö–ª–∏–µ–Ω—Ç: ${user.fullname}\n`;
        message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}\n`;
        message += `üè† –ê–¥—Ä–µ—Å: ${user.city}, ${user.address}\n\n`;
        
        message += `üì¶ –¢–û–í–ê–†–´:\n`;
        
        const RUB_RATE = 13;
        
        items.forEach((item, index) => {
            const priceYuan = Number(item.price || 1);
            const priceRub = Math.ceil(priceYuan * RUB_RATE);
            const deliveryPrice = DELIVERY_PRICES[item.category]?.[item.delivery] || 2000;
            const deliveryRub = Math.ceil(deliveryPrice);
            const taxRub = Math.ceil(priceRub * 0.1);
            
            message += `${index + 1}. ${item.category}\n`;
            message += `   üí∞ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: ¬•${item.price}\n`;
            message += `   üöö –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ¬•${Math.ceil(deliveryPrice / RUB_RATE)}\n`;
            message += `   üí∞ –ö–æ–º–∏—Å—Å–∏—è: ¬•${Math.ceil(taxRub / RUB_RATE)}\n`;
            message += `   üìè –†–∞–∑–º–µ—Ä: ${item.size}\n`;
            message += `   üé® –¶–≤–µ—Ç: ${item.color}\n`;
            message += `   üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${item.delivery}\n`;
            message += `   üîó –°—Å—ã–ª–∫–∞: ${item.link}\n\n`;
        });
        
        message += `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ${orderData.total.toLocaleString()}\n`;
        message += `‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}\n`;
        message += `üåê –ò—Å—Ç–æ—á–Ω–∏–∫: –ë—Ä–∞—É–∑–µ—Ä`;
        
        return message;
    }

    function showError(message) {
        const errorDiv = document.createElement("div");
        errorDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #ff4757;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
            animation: slideDown 0.3s ease;
        `;
        errorDiv.textContent = message;
        document.body.appendChild(errorDiv);
        setTimeout(() => {
            if (errorDiv.parentNode) {
                errorDiv.parentNode.removeChild(errorDiv);
            }
        }, 5000);
    }

    function showSuccess(message) {
        const successDiv = document.createElement("div");
        successDiv.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #1e1e1e;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            font-weight: 500;
            max-width: 90%;
            text-align: center;
            animation: slideDown 0.3s ease;
        `;
        successDiv.textContent = message;
        document.body.appendChild(successDiv);
        setTimeout(() => {
            if (successDiv.parentNode) {
                successDiv.parentNode.removeChild(successDiv);
            }
        }, 5000);
    }

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    window.copyOrderText = function(element) {
        const text = element.textContent;
        navigator.clipboard.writeText(text).then(() => {
            showSuccess("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
        }).catch(() => {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement("textarea");
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand("copy");
            document.body.removeChild(textArea);
            showSuccess("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
        });
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideDown {
            from { transform: translateX(-50%) translateY(-100%); opacity: 0; }
            to { transform: translateX(-50%) translateY(0); opacity: 1; }
        }
        button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        .order-text:hover {
            background: #1e1e1e !important;
        }
    `;
    document.head.appendChild(style);
});