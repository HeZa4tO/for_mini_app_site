document.addEventListener("DOMContentLoaded", () => {
    const CATEGORIES = [
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏","ü•æ –ë–æ—Ç–∏–Ω–∫–∏","üß• –¢–æ–ª—Å—Ç–æ–≤–∫–∏, –∫–æ—Ñ—Ç—ã, –ª—ë–≥–∫–∏–µ –∫—É—Ä—Ç–∫–∏",
        "üëï –§—É—Ç–±–æ–ª–∫–∏, —à–æ—Ä—Ç—ã","üëñ –®—Ç–∞–Ω—ã, –¥–∂–∏–Ω—Å—ã","üß§ –ó–∏–º–Ω–∏–µ –∫—É—Ä—Ç–∫–∏, –ø–∞–ª—å—Ç–æ",
        "üß¶ –ù–æ—Å–∫–∏, –º–∞–π–∫–∏, –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë","üï∂ –û—á–∫–∏, –ø–∞—Ä—Ñ—é–º, —É–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã",
        "üß¢ –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã","üëú –°—É–º–∫–∏ (–º–∞–ª–µ–Ω—å–∫–∏–µ)","üéí –°—É–º–∫–∏ (–±–æ–ª—å—à–∏–µ)","üì¶ –î—Ä—É–≥–æ–µ"
    ];

    const DELIVERY_PRICES = {
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏": {"normal": 2000, "express": 6500},
        "ü•æ –ë–æ—Ç–∏–Ω–∫–∏": {"normal": 2100, "express": 7000},
        "üß• –¢–æ–ª—Å—Ç–æ–≤–∫–∏, –∫–æ—Ñ—Ç—ã, –ª—ë–≥–∫–∏–µ –∫—É—Ä—Ç–∫–∏": {"normal": 1500, "express": 5000},
        "üëï –§—É—Ç–±–æ–ª–∫–∏, —à–æ—Ä—Ç—ã": {"normal": 1300, "express": 4500},
        "üëñ –®—Ç–∞–Ω—ã, –¥–∂–∏–Ω—Å—ã": {"normal": 1500, "express": 5000},
        "üß§ –ó–∏–º–Ω–∏–µ –∫—É—Ä—Ç–∫–∏, –ø–∞–ª—å—Ç–æ": {"normal": 1700, "express": 5500},
        "üß¶ –ù–æ—Å–∫–∏, –º–∞–π–∫–∏, –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë": {"normal": 700, "express": 4000},
        "üï∂ –û—á–∫–∏, –ø–∞—Ä—Ñ—é–º, —É–∫—Ä–∞—à–µ–Ω–∏—è, —á–∞—Å—ã": {"normal": 700, "express": 4000},
        "üß¢ –ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã": {"normal": 700, "express": 4000},
        "üëú –°—É–º–∫–∏ (–º–∞–ª–µ–Ω—å–∫–∏–µ)": {"normal": 1400, "express": 5000},
        "üéí –°—É–º–∫–∏ (–±–æ–ª—å—à–∏–µ)": {"normal": 1700, "express": 6500},
        "üì¶ –î—Ä—É–≥–æ–µ": {"normal": 1500, "express": 5000}
    };

    let cart = [];
    let rub_rate = 13;

    const categoriesDiv = document.getElementById("categories");
    CATEGORIES.forEach((cat, idx) => {
        const div = document.createElement("div");
        div.className = "category-card";
        div.innerHTML = `<strong>${cat}</strong> <button onclick="addToCart(${idx})">+</button>`;
        categoriesDiv.appendChild(div);
    });

    window.addToCart = function(idx){
        const cat = CATEGORIES[idx];
        cart.push({
            category: cat,
            link: "",
            price: "",
            size: "",
            color: "–ì–æ–ª—É–±–æ–π",
            delivery: "–û–±—ã—á–Ω–∞—è"
        });
        renderCart();
    }

    window.removeFromCart = function(i){
        cart.splice(i,1);
        renderCart();
    }

    window.setValue = function(i, field, value){
        if(field === "price" && (value === "" || parseFloat(value) <= 0)){
            alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É –±–æ–ª—å—à–µ 0");
            return;
        }
        cart[i][field] = value;
        renderCart();
    }

    function renderCart(){
        const cartDiv = document.getElementById("cart");
        cartDiv.innerHTML = "";
        let total = 0;
        let commission = cart.length >=3 ? 750*cart.length : 1000;

        cart.forEach((item,i)=>{
            const prices = DELIVERY_PRICES[item.category] || {normal: 2000, express: 6500};
            const deliveryCost = item.delivery === "–≠–∫—Å–ø—Ä–µ—Å—Å" ? prices.express : prices.normal;
            const priceRub = parseFloat(item.price) ? parseFloat(item.price)*rub_rate : 0;
            total += priceRub + deliveryCost;

            const div = document.createElement("div");
            div.className = "cart-item";
            div.style.background = item.color==="–ì–æ–ª—É–±–æ–π"?"#d0f0ff":"#d3d3d3";
            div.style.border = item.delivery==="–≠–∫—Å–ø—Ä–µ—Å—Å"?"2px solid #ffcccb":"1px solid #ccc";

            div.innerHTML = `
                <strong>${item.category}</strong>
                <button onclick="removeFromCart(${i})">-</button><br>
                –°—Å—ã–ª–∫–∞: <input type="text" value="${item.link}" onchange="setValue(${i},'link',this.value)" placeholder="–°—Å—ã–ª–∫–∞"><br>
                –¶–µ–Ω–∞ (¬•): <input type="number" value="${item.price}" onchange="setValue(${i},'price',this.value)" placeholder="–¶–µ–Ω–∞"><br>
                –†–∞–∑–º–µ—Ä: <input type="text" value="${item.size}" onchange="setValue(${i},'size',this.value)" placeholder="–†–∞–∑–º–µ—Ä"><br>
                –¶–≤–µ—Ç –∫–Ω–æ–ø–∫–∏:
                <select onchange="setValue(${i},'color',this.value)">
                    <option value="–ì–æ–ª—É–±–æ–π" ${item.color==="–ì–æ–ª—É–±–æ–π"?"selected":""}>–ì–æ–ª—É–±–æ–π</option>
                    <option value="–ß–µ—Ä–Ω—ã–π" ${item.color==="–ß–µ—Ä–Ω—ã–π"?"selected":""}>–ß–µ—Ä–Ω—ã–π</option>
                </select><br>
                –î–æ—Å—Ç–∞–≤–∫–∞:
                <select onchange="setValue(${i},'delivery',this.value)">
                    <option value="–û–±—ã—á–Ω–∞—è" ${item.delivery==="–û–±—ã—á–Ω–∞—è"?"selected":""}>–û–±—ã—á–Ω–∞—è</option>
                    <option value="–≠–∫—Å–ø—Ä–µ—Å—Å" ${item.delivery==="–≠–∫—Å–ø—Ä–µ—Å—Å"?"selected":""}>–≠–∫—Å–ø—Ä–µ—Å—Å</option>
                </select>
            `;
            cartDiv.appendChild(div);
        });

        let totalDiv = document.getElementById("totalSum");
        if(!totalDiv){
            totalDiv = document.createElement("div");
            totalDiv.id="totalSum";
            totalDiv.style.fontWeight="bold";
            totalDiv.style.marginTop="10px";
            cartDiv.appendChild(totalDiv);
        }

        totalDiv.innerHTML = `üí∞ –ò—Ç–æ–≥: ${total.toLocaleString()} ‚ÇΩ`;
    }

    document.getElementById("sendOrder").addEventListener("click", ()=>{
        if(cart.length===0){ alert("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!"); return; }

        for(let i=0;i<cart.length;i++){
            const price=parseFloat(cart[i].price);
            if(isNaN(price)||price<=0){
                alert(`–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É –¥–ª—è "${cart[i].category}"`);
                return;
            }
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
        const orderJSON = JSON.stringify(cart, null, 2);
        console.log("–ó–∞–∫–∞–∑ –≤ JSON:", orderJSON);

        // –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —á–µ—Ä–µ–∑ Telegram WebApp:
        if(window.Telegram?.WebApp?.sendData){
            Telegram.WebApp.sendData(orderJSON);
        }

        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        cart=[];
        renderCart();
    });
});

